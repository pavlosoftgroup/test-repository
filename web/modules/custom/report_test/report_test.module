<?php

/**
 * @file
 * Contains report_test.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Datetime\DrupalDateTime;


/**
 * Implements hook_help().
 */
function report_test_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the report_test module.
    case 'help.page.report_test':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Test REport Module') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function report_test_theme() {
  return [
    'report_test' => [
      'render element' => 'children',
    ],
  ];
}

/**
 * Set defaults for datetime fields.
 */
function _set_datetime_defaults($element) {
  $element['date']['#attributes']['data-drupal-date-format'] = ['m/d/Y'];
  $element['date']['#date_date_format'] = 'm/d/Y';
  $element['date']['#attributes']['placeholder'] = ["MM/DD/YYYY"];
  $element['time']['#attributes']['placeholder'] = ["HH:MM:SS"];

  return $element;
}

/**
 * Implements report_test_preprocess_page().
 */
function report_test_preprocess_page(&$variables) {

  $session = \Drupal::service('user.private_tempstore')->get('report_test');
  if ($session->get('action_popup')) {
    $variables['#attached']['library'][] = 'report_test/popup-scripts';
    $session->delete('action_popup');
  }
}

/**
 * Implements hook_preprocess_node().
 */
function report_test_preprocess_node(&$variables) {

  $variables['date'] = \Drupal::service('date.formatter')
    ->format($variables['node']->getCreatedTime(), 'report_date');

}

/**
 * Implements hook_field_widget_form_alter().
 */
function report_test_field_widget_form_alter(&$element, FormStateInterface $form_state, $context) {

  $field_definition = $context['items']->getFieldDefinition();

  //  kint($field_definition);

  switch ($field_definition->getType()) {
    case 'datetime':

      $element['value']['#type'] = 'textfield';
      $element['value']['#size'] = 10;
      $element['value']['#attributes'] = [
        'class' => [
          'datetime',
          'datepicker',
          'date',
        ],
        'placeholder' => 'mm/dd/YYYY',
      ];
      $element['value']['#date_date_format'] = 'm/d/Y';
      $element['value']['#default_value'] = NULL;
      //      $element['value']['#value'] = DateTime(Date('m/d/Y', time();
      break;
  }
}

/**
 * Implements hook_form_alter().
 */
function report_test_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  if ($form_id == 'node_report_user_form' || $form_id == 'node_report_user_edit_form') {
    $form['#attached']['library'][] = 'core/drupal.ajax';
    $form['#attached']['library'][] = 'modal/modal';

    foreach (array_keys($form['actions']) as $action) {
      if ($action != 'preview' && isset($form['actions'][$action]['#type']) && $form['actions'][$action]['#type'] === 'submit') {
        switch ($action) {
          case 'submit':
            $form['actions']['submit'] += [
              '#value' => t('Save'),
              '#type' => 'submit',
            ];
            $form_state->setValue('field_date', DrupalDateTime::createFromTimestamp(time()));
            break;
        }

      }
    }
  }
}




